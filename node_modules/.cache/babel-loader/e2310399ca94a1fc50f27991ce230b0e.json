{"ast":null,"code":"var _jsxFileName = \"/Users/matveystepanov/Documents/HSS_React_2_year/src/Components/Pages/CharacterPage/CharacterPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { EpisodesCard } from '../../EpisodesCard/EpisodesCard';\nimport { LocationCard } from '../../LocationCard/LocationCard';\nimport s from './CharacterPage.module.scss';\nimport { connect } from 'react-redux';\nimport { requestCharacter, requestEpisodes } from '../../../redux/main-reducer';\nimport { Loader } from '../../UI/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = _ref => {\n  _s();\n\n  var _character$location;\n\n  let {\n    character,\n    requestCharacter,\n    isFetching,\n    episodes,\n    requestEpisodes\n  } = _ref;\n  const {\n    charId\n  } = useParams();\n  const [allEpisodes, setAllEpisodes] = useState([]);\n  useEffect(() => {\n    var _character$episode, _character$episode2;\n\n    requestCharacter(charId);\n    character === null || character === void 0 ? void 0 : (_character$episode = character.episode) === null || _character$episode === void 0 ? void 0 : _character$episode.forEach(el => {\n      const id = el.split('/').pop();\n      setAllEpisodes(allEpisodes === null || allEpisodes === void 0 ? void 0 : allEpisodes.push(id));\n    });\n    allEpisodes.length === (character === null || character === void 0 ? void 0 : (_character$episode2 = character.episode) === null || _character$episode2 === void 0 ? void 0 : _character$episode2.length) && requestEpisodes(allEpisodes.join(','));\n  }, []);\n\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.bgWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.blurLayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.infoBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.avatar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: character.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: s.withDot,\n              children: [character.status, \"-\", character.species]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last known location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: character === null || character === void 0 ? void 0 : (_character$location = character.location) === null || _character$location === void 0 ? void 0 : _character$location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Created:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: character.created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: s.sectionTitle,\n          children: \"Episodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.cardRow,\n          children: episodes === null || episodes === void 0 ? void 0 : episodes.map(ep => /*#__PURE__*/_jsxDEV(LocationCard, {\n            episode: ep\n          }, 'episode' + ep.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterPage, \"BXZ3A2itsl9xHqK/tf2b99UOEc4=\", false, function () {\n  return [useParams];\n});\n\n_c = CharacterPage;\n\nconst mapStateToProps = state => ({\n  character: state.main.character,\n  isFetching: state.main.isFetching,\n  episode: state.main.episodes\n});\n\nexport const CharacterPageContainer = connect(mapStateToProps, {\n  requestCharacter,\n  requestEpisodes\n})(CharacterPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","EpisodesCard","LocationCard","s","connect","requestCharacter","requestEpisodes","Loader","CharacterPage","character","isFetching","episodes","charId","allEpisodes","setAllEpisodes","episode","forEach","el","id","split","pop","push","length","join","wrapper","bgWrapper","image","blurLayer","infoBlock","avatar","content","name","withDot","status","species","location","created","sectionTitle","cardRow","map","ep","mapStateToProps","state","main","CharacterPageContainer"],"sources":["/Users/matveystepanov/Documents/HSS_React_2_year/src/Components/Pages/CharacterPage/CharacterPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { EpisodesCard } from '../../EpisodesCard/EpisodesCard'\nimport { LocationCard } from '../../LocationCard/LocationCard'\nimport s from './CharacterPage.module.scss'\nimport { connect } from 'react-redux';\nimport { requestCharacter, requestEpisodes } from '../../../redux/main-reducer';\nimport { Loader } from '../../UI/loader';\n\nconst CharacterPage = ({character, requestCharacter, isFetching, episodes, requestEpisodes}) => {\n  const {charId} = useParams()\n\n  const [allEpisodes, setAllEpisodes] = useState([])\n\n  useEffect(() => {\n    requestCharacter(charId)\n    character?.episode?.forEach(el => {\n      const id = el.split('/').pop()\n      setAllEpisodes(allEpisodes?.push(id))\n    })\n    allEpisodes.length === character?.episode?.length && requestEpisodes(allEpisodes.join(','))\n  }, [])\n\n  if(isFetching){\n    return (\n      <Loader/>\n    )\n  }\n\n  return (\n    <div className={s.wrapper}>\n        <div className={s.bgWrapper}>\n          <img src={character.image} alt=\"\"/>\n          <div className={s.blurLayer}></div>\n        </div>\n        <div className='container'>\n          <div className={s.infoBlock}>\n            <div className={s.avatar}>\n              <img src={character.image} alt=\"\" />\n            </div>\n            <div className={s.content}>\n              <div>\n                <h1>{character.name}</h1>\n                <span className={s.withDot}>{character.status}-{character.species}</span>\n              </div>\n              <div>\n                <p>Last known location:</p>\n                <span>{character?.location?.name}</span>\n              </div>\n              <div>\n                <p>Created:</p>\n                <span>{character.created}</span>\n              </div>\n            </div>\n          </div>\n          <section>\n            <h1 className={s.sectionTitle}>Episodes</h1>\n            <div className={s.cardRow}>\n              {episodes?.map(ep => <LocationCard episode={ep} key={'episode'+ep.id}/>)}\n            </div>\n          </section>\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  character: state.main.character,\n  isFetching: state.main.isFetching,\n  episode: state.main.episodes\n})\n\nexport const CharacterPageContainer = connect(mapStateToProps, {requestCharacter, requestEpisodes})(CharacterPage)"],"mappings":"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"},"metadata":{},"sourceType":"module"}